version: 2

jobs:
  build:
    macos:
      xcode: "10.1.0"
    environment:
      FL_OUTPUT_DIR: output
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-spar-homebrew

      - restore_cache:
          keys:
            - v1-spar
      # - restore_cache:
      #     keys:
      #       - v4-rbenv-{{ checksum "Gemfile" }}
      #       - v4-rbenv-2.6.1
      #       - v3-rbenv
      
      - run:
          name: no doc
          command: |
            echo 'gem: --no-document' >> ~/.gemrc

      - run:
          name: brew update
          command: brew update

      - run:
          name: brew upgrade
          command: brew upgrade
      
      - run:
          name: Uninstall chruby
          command: brew uninstall chruby

      - run:
          name: brew install rbenv ruby-build
          command: brew install rbenv ruby-build

      - save_cache:
          key: v2-spar-homebrew
          paths:
            - /usr/local/Homebrew
            - /usr/local/bin
            - /usr/local/Cellar/

      - run:
          name: echo 'eval "$(rbenv init -)"' > ~/.bash_profile
          command: echo 'eval "$(rbenv init -)"' > ~/.bash_profile

      - run:
          name: add homebrew path
          command: echo 'export PATH=/usr/local/bin:$PATH' >> ~/.bash_profile

      - run:
          name: source
          command: source ~/.bash_profile

      - run:
          name: install 2.6.1
          command: rbenv install 2.6.1 -s

      - run:
          name: rbenv global 2.6.1
          command: rbenv global 2.6.1

      - run:
          name: rbenv rehash
          command: rbenv rehash

      - run:
          name: gem update --system
          command: gem update --system
      
      - save_cache:
          key: v1-spar
          paths:
            - ~/.rbenv

#       - run:
#           name: Setup Build
#           command: |
#             echo 'export PATH=/usr/local/bin:$PATH' >> ~/.bash_profile
#             rbenv install 2.6.1 -s
#             rbenv rehash
#             rbenv global 2.6.1
#             rbenv local 2.6.1
#             rbenv shell 2.6.1
#             cat ~/.bash_profile
#             source ~/.bash_profile
#             gem update --system --force
#             gem install bundler
#             bundle env
#             rbenv rehash
#             which ruby
#             ruby -v
# #  curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash
# #            brew install chruby
#       - save_cache:
#           key: v7-homebrew
#           paths:
#             - /usr/local/Homebrew
#             - ~/.rbenv

#       # - save_cache:
#       #     key: v4-rbenv-2.6.1
#       #     paths:
#       #       - ~/.rbenv

#       - run:
#           name: Setup Build
#           command: |
#             which ruby
#             ruby -v
#             gem update
#             gem install bundler
#             bundler -v
#             bundle install --binstubs
#             bundle check || bundle install
      # - save_cache:
      #     key: v4-rbenv-{{ checksum "Gemfile" }}
      #     paths:
      #       - ~/.rbenv

      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan

      # - run:
      #     name: Check PR Metadata
      #     command: bundle exec danger || echo "danger failed"

      # - restore_cache:
      #     key: v1-{{ arch }}-rubocop

      # - run: bundle exec fastlane execute_tests

      # - save_cache:
      #     key: v1-{{ arch }}-rubocop
      #     paths:
      #       - ~/.cache/rubocop_cache
      # - store_test_results:
      #     path: ~/test-reports
      # - store_artifacts:
      #     path: ~/test-reports/rspec
      #     destination: test-reports

      # - run:
      #     name: Post Test Results to GitHub
      #     command: bundle exec danger || echo "danger failed"
      #     when: always # Run this even when tests fail
workflows:
  version: 2
  build:
    jobs:
      - build
      # - "Execute tests on Ubuntu"
